# check spelling, codestyle
name: GitHub CI

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  DOCUMENTATION_CNAME: 'engineeringworkflow.docs.pyansys.com'
  MAIN_PYTHON_VERSION: '3.10'
  PACKAGE_NAME: 'ansys-engineeringworkflow-api'
  PACKAGE_NAMESPACE: 'ansys.engineeringworkflow.api'

jobs:
  code-style:
    name: "Code style"
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-style:
    name: "Documentation Style Check"
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: "Build and Smoke tests"
    runs-on: ${{ matrix.os }}
    needs: [code-style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
        exclude:
          - should-release: false
            os: macos-latest

    steps:
      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@v4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

  build-test:
    name: "Build and unit testing"
    runs-on: ubuntu-latest
    needs: [smoke-tests]

    steps:
      - name: "Install Git and checkout project"
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create Python venv
        run: |
          python -m venv .venv
          .venv/bin/activate

      - name: Install ansys-engineeringworkflow-api and its test dependencies
        run: |
          pip install -e .[tests]

      - name: "Unit testing"
        run: |
          pytest -v --durations=10 --maxfail=10
            --cov=ansys.engineeringworkflow.api\
            --cov-report=xml:coverage.xml\
            --cov-report=html --cov-report term

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        with:
          name: remote.xml
          flags: remote

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v3
        with:
          name: remote.xml
          path: ./remote.xml

  doc-build:
    name: "Documentation building"
    runs-on: ubuntu-latest
    needs: [doc-style]
    steps:
      - name: "Install Git and checkout project"
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create Python venv
        run: |
          python -m venv .venv
          .venv/bin/activate

      - name: Install ansys-engineeringworkflow-api and its doc dependencies
        run: |
          pip install -e .[doc]

      - name: "Run Ansys documentation building action"
        uses: ansys/actions/doc-build@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          checkout: false
          skip-install: true
          sphinxopts: -j auto

  release:
    if: contains(github.ref, 'refs/tags')
    needs: [build-test]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: ansys-common-variableinterop-wheel

#      - uses: actions/download-artifact@v2
#        with:
#          name: Documentation-pdf

# When we go to publish this on PyPi, if we want docs included we
# will need to rewrite this section because the artifact was changed
# to save using actions/upload-pages-artifact@v1actions/upload-pages-artifact@v1
# This saves in a slightly different format (zip of a tar file)
#      - uses: actions/download-artifact@v2
#        with:
#          name: Documentation-html
#          path: ~/html

      # list current directory
      - name: List directory structure
        run: ls -R

      # note how we use the PyPI tokens
      - name: Upload to Azure PyPi (disabled)
        run: |
          pip install twine
          # twine upload --skip-existing ./**/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./**/*.whl
            ./**/*.zip
            ./**/*.pdf
